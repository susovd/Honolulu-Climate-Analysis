# `/api/v1.0/stations`

# * Return a JSON list of stations from the dataset.

# `/api/v1.0/tobs`
#* Query the dates and temperature observations of the most active station for the last year of data.
  
# * Return a JSON list of temperature observations (TOBS) for the previous year.

#* `/api/v1.0/<start>` and `/api/v1.0/<start>/<end>`

#  * Return a JSON list of the minimum temperature, the average temperature, and the max temperature for a given start or start-end range.

#  * When given the start only, calculate `TMIN`, `TAVG`, and `TMAX` for all dates greater than and equal to the start date.

#  * When given the start and the end date, calculate the `TMIN`, `TAVG`, and `TMAX` for dates between the start and end date inclusive.
@app.route("/api/v1.0/passengers")
def passengers():
    # Create our session (link) from Python to the DB
    session = Session(engine)

    """Return a list of passenger data including the name, age, and sex of each passenger"""
    # Query all passengers
    results = session.query(Passenger.name, Passenger.age, Passenger.sex).all()

    session.close()

    # Create a dictionary from the row data and append to a list of all_passengers
    all_passengers = []
    for name, age, sex in results:
        passenger_dict = {}
        passenger_dict["name"] = name
        passenger_dict["age"] = age
        passenger_dict["sex"] = sex
        all_passengers.append(passenger_dict)

    return jsonify(all_passengers)
